/********************************************/
/*         learnstock.c                     */
/*  단순한 귀납학습 예제 프로그램        */
/*            패턴 학습기                */
/* 100개의 학습 데이터를 읽어들여            */
/* 적합한 10자리의 2진수 패턴을 답함  */
/* 사용 방법                                    */
/*:\Users\deeplearning\ch2>learnstock < ldata.txt */
/********************************************/

/*Visual Studio와의 호환성 확보 */
#define _CRT_SECURE_NO_WARNINGS

/* 헤더 파일 포함 */
#include <stdio.h>
#include <stdlib.h>

/* 기호 상수 정의             */
#define OK 1 
#define NG 0
#define SETSIZE 100 /* 학습 데이터 세트의 크기 */
#define CNO 10 /* 학습 데이터의 자릿수(10회사 분) */
#define GENMAX  100000 /* 해답 후보 생성 횟수 */
#define SEED 32767 /* 난수 시드 */

/* 함수 프로토타입 선언  */
void readdata(int data[SETSIZE][CNO], int teacher[SETSIZE]);
/* 학습 데이터 세트를 읽어들임 */
int rand012();/*0, 1 또는 2를 반환하는 난수 함수 */
int calcscore(int data[SETSIZE][CNO], int teacher[SETSIZE],
	int answer[CNO]);
/* 해답 후보 패턴의 점수(0~SETSIZE점)의 계산 */

/****************/
/*  main() 함수  */
/****************/
int main()
{
	int i, j;
	int score = 0;/* 점수(0～SETSIZE점)*/
	int answer[CNO];/* 해답 후보 */
	int data[SETSIZE][CNO];/* 학습 데이터 세트 */
	int teacher[SETSIZE];/* 교사 데이터 */
	int bestscore = 0;/* 가장 좋은 점수 */
	int bestanswer[CNO];/* 탐색 중 찾은 가장 좋은 점수 */
	int testanswer[CNO];
	int testdata[10][CNO];


	srand(SEED);/* 난수 초기화 */

	/*학습 데이터 세트를 읽어들임 */
	readdata(data, teacher);
	printf("10개의 회사 주가변동을 표시하고 그에따른 X회사 주가 변동이 어떻게 되는지에 대한 data\n");
	printf("10개의 회사는 횡으로 표시되며, 열은 10개의 회사 주가 변동의 데이타 들입니다.\n");
	printf("즉, 1횡은 10개의 회사의 1월 1 일 주가변동이고, 2횡은 10개의 회사 1월 2일 주가변동.. 이런식으로 이해하시면 됩니다.\n\n\n");

	printf("아래 해답은 예측을 할수 있게 해주는 일반화 되는 표 입니다.\n");
	printf("점수가 제일 높은 표를 기준으로 10개의 회사의 주가 변동을 비교하여 X회사의 주가를 예측하면 됩니다.\n\n");
	printf("A사B사C사D사E사F사G사H사I사J사\n");
	/* 해답 후보 생성과 검사 */
	for (i = 0; i < GENMAX; ++i) {
		/* 해답 후보 생성 */
		for (j = 0; j < CNO; ++j) {
			answer[j] = rand012();
		}

		/* 검사 */
		score = calcscore(data, teacher, answer);
		
		/* 가장 좋은 점수로 갱신 */
		if (score > bestscore) {/* 지금까지 가장 좋은 점수라면 갱신 */
			for (j = 0; j < CNO; ++j)
				bestanswer[j] = answer[j];
			bestscore = score;
			for (j = 0; j < CNO; ++j)
				printf("%1d  ", bestanswer[j]);
			printf(":score=%d \n", bestscore);
		}
	}
	/* 가장 좋은 해답 출력 */
	printf("\n가장 좋은 해답\n");
	printf("A사B사C사D사E사F사G사H사I사J사\n");
	for (j = 0; j < CNO; ++j)
		printf("%1d  ", bestanswer[j]);
	printf(":score=%d\n\n\n", bestscore);

	printf("이 것이 어느정도 일반화된 표 입니다.\n");
	printf("이 패턴에 해당 10개의 회사의 주가 상승 현황을 비교할 때\n");
	printf("2에 해당하는 부분은 무시하고 0 에 해당하는 회사 주식변동이 0 이 아니라면 X회사 주가는 하락하는 0 이 예측 되는것 입니다.\n");
	printf("2는 와일드 카드 이므로 0,1 상관이 없지만, answer가 0인 회사가 1로 되어있다면 X회사 주가는 하락한다는 뜻입니다.\n");
	printf("answer가 0인 회사가 다 0 이라면, X회사 주가는 상승 하는 1 로 예측이 되는 것입니다.\n");



	return 0;
}

/**********************************************/
/*            calcscore() 함수                 */
/* 해답 후보 패턴의 점수(0～SETSIZE점) 계산*/
/**********************************************/
int calcscore(int data[SETSIZE][CNO], int teacher[SETSIZE],
	int answer[CNO])
{
	int score = 0;/* 점수(0～SETSIZE점)*/
	int point;/* 일치한 자릿수(0～CNO)  */
	int i, j;

	for (i = 0; i < SETSIZE; ++i) {
		/* 일치도 계산 */
		point = 0;
		for (j = 0; j < CNO; ++j) {
			if (answer[j] == 2) ++point;/* 와일드카드 */
			else if (answer[j] == data[i][j]) ++point;/* 일치 */
		}

		if ((point == CNO) && (teacher[i] == 1)) {
			++score;
		}
		else if ((point != CNO) && (teacher[i] == 0)) {
			++score;
		}
	}
	return score;
}

/****************************/
/*     readdata() 함수        */
/*학습 데이터 세트를 읽어들임 */
/****************************/
void readdata(int data[SETSIZE][CNO], int teacher[SETSIZE])
{
	FILE* f = fopen("본인의 데이타 파일 경로", "r");

	if (f == NULL)
	{
		printf("error\n");
	}
	int i, j;

	for (i = 0; i < SETSIZE; ++i) {
		for (j = 0; j < CNO; ++j) {
			fscanf(f,"%d", &data[i][j]);
		}
		fscanf(f,"%d", &teacher[i]);
	}

	fclose(f);
}

/****************************/
/*     rand012() 함수        */
/*　0, 1 또는 2를 반환하는 난수 함수 */
/****************************/
int rand012()
{
	int rnd;

	/* 난수의 최댓값을 제외 */
	while ((rnd = rand()) == RAND_MAX);
	/* 난수 계산 */
	return (double)rnd / RAND_MAX * 3;
}

